{
    "Resources": {
        "AAPFmanagementCF": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "AAPFinstanceprofileCF"
                },
                "SubnetId": {
                    "Ref": "AAPFsubnetCF"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "AAPFsgCF"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeSize": {
                                "Ref": "ManagementNodeRootVolumeSize"
                            },
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/sdb",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "Encrypted": "true",
                            "VolumeSize": {
                                "Ref": "ManagementNodeAddOnVolumeSize"
                            },
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "DisableApiTermination": "false",
                "EbsOptimized": "false",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegion2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceInitiatedShutdownBehavior": "stop",
                "InstanceType": {
                    "Ref": "ManagementNodeInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "AAPF-ManagementNode-cf_",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "Tenancy": "default",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "easy_install pip\n",
                                "pip install awscli\n",
                                "# Install Ansible, python-netaddr and lvm2\n",
                                "yum-config-manager --enable rhui-REGION-rhel-server-extras\n",
                                "yum install -y ansible\n",
                                "yum install python-netaddr -y\n",
                                "yum install -y lvm2\n",
                                "cd /home/ec2-user/\n",
                                "mkdir AAPF/ ; cd AAPF/ \n",
                                "# Download the package and license from s3 bucket defined by user\n",
                                "aws s3 cp s3://",
                                {
                                    "Ref": "S3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                ".tar.gz .\n",
                                "aws s3 cp s3://",
                                {
                                    "Ref": "S3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "AAPFLicenseFileName"
                                },
                                ".tar .\n",
                                "aws s3 cp s3://",
                                {
                                    "Ref": "S3BucketName"
                                },
                                "/",
                                {
                                    "Ref": "KeyName"
                                },
                                ".pem .\n",
                                "chmod 400 ",
                                {
                                    "Ref": "KeyName"
                                },
                                ".pem\n",
                                "aws s3 cp s3://",
                                {
                                    "Ref": "S3BucketName"
                                },
                                "/AAPFInternalKeyPair.pem /home/ec2-user/AAPF/AAPFInternalKeyPair.pem\n",
                                "chown ec2-user:ec2-user /home/ec2-user/AAPF/AAPFInternalKeyPair.pem\n",
                                "su - ec2-user -c \"chmod 400 /home/ec2-user/AAPF/AAPFInternalKeyPair.pem\"\n",
                                "su - ec2-user -c \"ssh-keygen -y -f /home/ec2-user/AAPF/AAPFInternalKeyPair.pem > /home/ec2-user/pub_key\"\n",
                                "su - ec2-user -c 'echo \"$(cat /home/ec2-user/pub_key)\" \"AAPFInternalKeyPair\" >> ~/.ssh/authorized_keys'\n",
                                "rm -f /home/ec2-user/pub_key\n",
                                "# Extract the AAPF image\n",
                                "tar -xzf ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                ".tar.gz\n",
                                "mv ",
                                {
                                    "Ref": "AAPFLicenseFileName"
                                },
                                ".tar ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/\n",
                                "chown -R ec2-user:ec2-user /home/ec2-user/AAPF/\n",
                                "# Add Private hostnames of All nodes in hosts file\n",
                                "sed -i \"s/\\[management_node\\]/\\[management_node\\]\\n$(curl http://169.254.169.254/latest/meta-data/local-ipv4)/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/hosts\n",
                                "sed -i \"s/\\[storage_node\\]/\\[storage_node\\]\\n",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFstorageCF",
                                        "PrivateIp"
                                    ]
                                },
                                "/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/hosts\n",
                                "sed -i \"s/\\[container_node\\]/\\[container_node\\]\\n",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFcontCF",
                                        "PrivateIp"
                                    ]
                                },
                                "/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/hosts\n",
                                "sed -i \"s/\\[web_service_node\\]/\\[web_service_node\\]\\n",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFwebcf",
                                        "PrivateIp"
                                    ]
                                },
                                " main_node=yes/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/hosts\n",
                                "# Add VPC CIDR block to 'nfs_server_host_or_network' in config.yml\n",
                                "sed -i \"s/nfs_server_host_or_network:/nfs_server_host_or_network: 10.0.0.0\\/16",
                                "/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/config.yml\n",
                                "# Enable HTTPS on webUI if required by user\n",
                                "if [[ \"",
                                {
                                    "Ref": "EnableHTTPS"
                                },
                                "\" = \"enable\" ]]; then ",
                                "sed -i \"s/# ssl_certificate: \\/path\\/to\\/cert.pem/ssl_certificate: \\/etc\\/nginx\\/ssl\\/server.pem",
                                "/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/config.yml ; ",
                                "sed -i \"s/# ssl_certificate_key: \\/path\\/to\\/cert.key/ssl_certificate_key: \\/etc\\/nginx\\/ssl\\/server.key",
                                "/\" ",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer/config.yml ; ",
                                "fi\n",
                                "# Set passwordless ssh from management node to other nodes\n",
                                "su - ec2-user -c \"ssh-keygen -f ~/.ssh/id_rsa -t rsa -N ''\"\n",
                                "su - ec2-user -c \"cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\"\n",
                                "su - ec2-user -c \"chown ec2-user:ec2-user ~/.ssh/authorized_keys\"\n",
                                "su - ec2-user -c \"chmod 600 ~/.ssh/authorized_keys\"\n",
                                "su - ec2-user -c \"cat ~/.ssh/id_rsa.pub | ssh -o StrictHostKeyChecking=no -i /home/ec2-user/AAPF/",
                                "AAPFInternalKeyPair.pem ec2-user@$(curl http://169.254.169.254/latest/meta-data/local-ipv4) 'umask 077 && mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\"\n",
                                "su - ec2-user -c \"cat ~/.ssh/id_rsa.pub | ssh -o StrictHostKeyChecking=no -i /home/ec2-user/AAPF/",
                                "AAPFInternalKeyPair.pem ec2-user@",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFstorageCF",
                                        "PrivateIp"
                                    ]
                                },
                                " 'umask 077 && mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\"\n",
                                "su - ec2-user -c \"cat ~/.ssh/id_rsa.pub | ssh -o StrictHostKeyChecking=no -i /home/ec2-user/AAPF/",
                                "AAPFInternalKeyPair.pem ec2-user@",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFcontCF",
                                        "PrivateIp"
                                    ]
                                },
                                " 'umask 077 && mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\"\n",
                                "su - ec2-user -c \"cat ~/.ssh/id_rsa.pub | ssh -o StrictHostKeyChecking=no -i /home/ec2-user/AAPF/",
                                "AAPFInternalKeyPair.pem ec2-user@",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFwebcf",
                                        "PrivateIp"
                                    ]
                                },
                                " 'umask 077 && mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum install -y unzip' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum install -y rsync' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum  install -y python-devel-2.7.5-58.el7.x86_64' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum install -y python-libs-2.7.5-58.el7.x86_64' -b\"\n",
                                "#Enable version Lock",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum install -y kernel-3.10.0-693.*' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum install -y yum-plugin-versionlock' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum versionlock add kernel-3.10.0-693.*' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum versionlock add python-2.7.5-58.*' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum versionlock add python-libs-2.7.5-58.*' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node,storage_node,web_service_node -i hosts -a 'yum versionlock add python-devel-2.7.5-58.*' -b\"\n",
                                "# hostname settings\n",
                                "hostnamectl set-hostname --static Mang\n",
                                "sed \"$ a preserve_hostname: true\" ",
                                "/etc/cloud/cloud.cfg\n",
                                "sed -i \"$ a $(curl http://169.254.169.254/latest/meta-data/local-ipv4)",
                                " Mang\" ",
                                "/etc/hosts\n",
                                "sed -i \"$ a ",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFstorageCF",
                                        "PrivateIp"
                                    ]
                                },
                                " Strg\" ",
                                "/etc/hosts\n",
                                "sed -i \"$ a ",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFcontCF",
                                        "PrivateIp"
                                    ]
                                },
                                " Cont\" ",
                                "/etc/hosts\n",
                                "sed -i \"$ a ",
                                {
                                    "Fn::GetAtt": [
                                        "AAPFwebcf",
                                        "PrivateIp"
                                    ]
                                },
                                " Web\" ",
                                "/etc/hosts\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node -i hosts -a 'pvcreate /dev/xvdb' -b\"\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible management_node,container_node -i hosts -a 'vgcreate docker-vg /dev/xvdb' -b\"\n",
                                "date\n",
                                "su - ec2-user -c \"cd /home/ec2-user/AAPF/",
                                {
                                    "Ref": "AAPFPackageFileName"
                                },
                                "/installer; ansible-playbook -i hosts -v aapf_cluster.yml\"\n",
                                "date\n"
                            ]
                        ]
                    }
                },
                "AdditionalInfo": "AAPF Management Node"
            }
        }
    }
}